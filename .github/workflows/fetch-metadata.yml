name: Fetch Metadata

on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *'

jobs:
  fetch-metadata:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install node-fetch
        run: npm install node-fetch

      - name: Fetch folder metadata
        run: |
          mkdir -p temp
          curl -H "Authorization: token ${{ secrets.MY_GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/contents/aset \
            -o temp/files.json

      - name: Generate metadata.json
        run: |
          node <<'EOF'
          const fs = require('fs');
          const fetch = (...args) => import('node-fetch').then(({ default: fetch }) => fetch(...args));
          const files = JSON.parse(fs.readFileSync('temp/files.json'));
          (async () => {
            const output = [];
            for (const file of files) {
              if (!/\.(png|jpe?g|gif|webp|svg)$/i.test(file.name)) continue;
              const commits = await fetch(`https://api.github.com/repos/${process.env.GITHUB_REPOSITORY}/commits?path=${file.path}`, {
                headers: { Authorization: 'token ' + process.env.MY_GITHUB_TOKEN }
              }).then(r => r.json());
              const latest = commits[0];
              output.push({
                name: file.name,
                path: file.path,
                size: file.size,
                extension: file.name.split('.').pop(),
                date: latest?.commit?.author?.date || null
              });
            }
            fs.mkdirSync('image', { recursive: true });
            fs.writeFileSync('image/metadata.json', JSON.stringify(output, null, 2));
          })();
          EOF

      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          persist-credentials: false

      - name: Commit metadata.json
        run: |
          git config user.name "iceinstitut"
          git config user.email "iceinstitut@users.noreply.github.com"
          git add image/metadata.json
          git commit -m "Update metadata.json" || echo "Nothing to commit"
          git remote set-url origin https://x-access-token:${{ secrets.MY_GITHUB_TOKEN }}@github.com/${{ github.repository }}.git
          git push origin main

